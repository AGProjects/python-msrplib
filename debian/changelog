python-msrplib (1.0.0) unstable; urgency=low

  * 

 -- Adrian Georgescu <ag@ag-projects.com>  Tue, 17 Mar 2009 20:33:13 +0100

python-msrplib (0.9.2) unstable; urgency=low

  * splitted MSRPTransport into 2 classes: MSRPSession (session.py) and
    MSRPTransport (transport.py);
  * new MSRPSession class has outgoing queue and shutdown() method
  * added option to rechunk incoming chunks (generate sequence of small chunks
    from a big chunk)
  * transport.py: replaced make_SEND_response with make_response that also handles
  * non-SEND requests
  * added MSRPServer class with tests which reuse listening socket
  * made MSRPTransport.write_response accept 'sync' argument
  * made MSRPTransport.__init__ accept None as local_uri
  * connectors don't accept MSRPTransportClass anymore as an argument
  * added throw_args to MSRPTimeoutError.timeout() function
  * added __hash__ to protocol.URI; makes it usable in sets
  * used 'sync' argument to loseConnection instead of spawning a greenlet
  * added support for simple patterns to MSRPSession's accept_types argument
  * renamed MSRPSession's argument allowed_content_types to accept_types
  * changed MSRPSession to report incoming chunks and responses via a callback
  * added GreenMSRPSession class that builts on top of MSRPSession and uses a
    queue (like old MSRPSession)
  * protocol.py: added 'status' attribute to MSRPData
  * protocol.py: added 'code' and 'comment' attributes to StatusHeader
  * make MSRPTransport.write support 'sync' parameter like GreenTransportBase does
  * MSRPSession.send_chunk now accepts message_id parameter
  * MSRPSession.deliver_chunk now raises an exception if error code is not 200
  * made LocalResponse a subclass of MSRPTransactionError
  * added message_id argument to MSRPTransport.make_chunk
  * added optional 'sync' argument to cleanup()
  * updated copyright years
  * MSRPTransport: if an error, don't wait for connection to close before raising
  * made MSRPTransport.make_chunk accept start, end and length as arguments
  * connect.py: made somefunctions to use explicit params instead of kwargs where
    it adds clarity
  * connect.py: updated __all__ to include all the exceptions classes
  * added module docstring for connect.py
  * added byte_range attribute to MSRPData
  * added 'fro', 'to' and 'total' attributes to ByteRangeHeader
  * trafficlog.py: use sys.__stdout__ instead of saving stdout to a global var
  * added debug parameter to StateLogger
  * removed util.py
  * use random.getrandbits to generate random strings instead of /dev/urandom and
    custom functions
  * updated python-eventlet debian dependency from 0.8.9 to 0.8.9-2
  * added python-zopeinterface to dependecies
  * StateLogger: add dbg() method for writing arbitratry debug strings
  * made MSRPData.__repr__ more informative
  * made tests use whatever port is available, not necessarily 2855
  * added 'reserved session' log message to state logger
  * minor improvements in log messages
  * removed MSRPAcceptFactory and MSRPConnectFactory classes
  * added get_connector/get_acceptor functions
  * removed blocking operations from 'finally' and 'except' sections where they
    could result in traceback being delayed or missed
  * made connect.py more selective in catching exceptions, so it'll less likely
  * silent an error
  * added 'message_id' property to MSRPData
  * removed a debugging assert from trafficlog.py

 -- Denis Bilenko <denis@ag-projects.com>  Sun, 01 Mar 2009 11:49:22 +0100

python-msrplib (0.9.1) unstable; urgency=low

  * renamed transport.MSRPSession to MSRPTransport
  * fixed MSRPTransport to call base' class methods where necessary
  * added cleanup() methods to all acceptors/connectors
  * added protocol.ConnectInfo - base class for both relaysettings and uri
  * added deliver_chunk and deliver_message methods to MSRPTransport
  * added tests for TLS when a relay is not involved
  * changed short title in debian/control
  * added getHost() method to connectors/acceptors
  * added to_file method to logger
  * added MSRPRelaySettings.__str__
  * better handling of GNUTLS error
  * improved error handling, explicitly close the connection in case of error
    in many places where it makes sense
  * added connection state logging (connected, disconnected, accepted, etc)
  * added MANIFEST.in
  * added debian dependency on python-application
  * fixed to use latest eventlet and added dependency on python-eventlet
    debian package

 -- Denis Bilenko <denis@ag-projects.com>  Mon, 26 Jan 2009 14:52:47 +0100

python-msrplib (0.9.0) unstable; urgency=low

  * first public release

 -- Denis Bilenko <denis@ag-projects.com>  Fri, 19 Dec 2008 16:58:56 +0600

